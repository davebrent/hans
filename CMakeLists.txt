cmake_minimum_required(VERSION 3.2 FATAL_ERROR)
project(hans)

find_package(PkgConfig REQUIRED)
find_package(OpenGL REQUIRED)
pkg_search_module(LIBAVCODEC REQUIRED libavcodec)
pkg_search_module(LIBAVDEVICE REQUIRED libavdevice)
pkg_search_module(LIBAVFILTER REQUIRED libavfilter)
pkg_search_module(LIBAVFORMAT REQUIRED libavformat)
pkg_search_module(LIBAVRESAMPLE REQUIRED libavresample)
pkg_search_module(LIBSWSCALE REQUIRED libswscale)
pkg_search_module(LIBAVUTIL REQUIRED libavutil)
pkg_search_module(GLFW REQUIRED glfw3)
pkg_search_module(EPOXY REQUIRED epoxy)
pkg_search_module(PORTAUDIO REQUIRED portaudio-2.0)
pkg_search_module(RTMIDI REQUIRED rtmidi)
pkg_search_module(GUILE REQUIRED guile-2.0)
pkg_search_module(SQLITE3 REQUIRED sqlite3)

include_directories(${LIBAVCODEC_INCLUDE_DIRS})
include_directories(${LIBAVDEVICE_INCLUDE_DIRS})
include_directories(${LIBAVFILTER_INCLUDE_DIRS})
include_directories(${LIBAVFORMAT_INCLUDE_DIRS})
include_directories(${LIBAVRESAMPLE_INCLUDE_DIRS})
include_directories(${LIBSWSCALE_INCLUDE_DIRS})
include_directories(${LIBAVUTIL_INCLUDE_DIRS})
include_directories(${GLFW_INCLUDE_DIRS})
include_directories(${EPOXY_INCLUDE_DIRS})
include_directories(${PORTAUDIO_INCLUDE_DIRS})
include_directories(${RTMIDI_INCLUDE_DIRS})
include_directories(${GUILE_INCLUDE_DIRS})
include_directories(${SQLITE3_INCLUDE_DIRS})

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
include(FindUBSan)
include(FindASan)
include(FindMSan)
include(FindTSan)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} ${CMAKE_CXX_FLAGS_UBSAN}")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} ${CMAKE_CXX_FLAGS_MSAN}")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} ${CMAKE_CXX_FLAGS_ASAN}")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} ${CMAKE_CXX_FLAGS_TSAN}")

include_directories(include)
include_directories(3rdparty/include)

add_subdirectory(lib)
add_subdirectory(apps)
add_subdirectory(test)
add_subdirectory(modules)
